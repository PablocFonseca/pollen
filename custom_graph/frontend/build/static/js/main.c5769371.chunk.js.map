{"version":3,"sources":["Main.jsx","index.tsx"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_seed","Math","random","data","baseval","count","yrange","x","y","floor","max","min","getDayWiseTimeSeries","Date","getTime","withStreamlitConnection","props","kwargs","args","y_axis","api","y_max","_useState","useState","_useState2","_slicedToArray","series","setSeries","_useState3","_useState4","options","setOptions","useEffect","Streamlit","setFrameHeight","getGraphData","_ref","_asyncToGenerator","_callee","res","_context","axios","post","_objectSpread","JSON","parse","apply","arguments","interval","setInterval","_callee2","dfData","serie1","new_serires","_context2","map","row","timestamp_est","close","vwap","line","console","log","ApexCharts","exec","_ref3","_callee3","categories","new_option","_context3","chart","id","height","zoom","enabled","animations","easing","dynamicAnimation","speed","dataLabels","stroke","width","curve","dashArray","title","text","align","legend","tooltipHoverFormatter","opts","w","globals","seriesIndex","dataPointIndex","markers","size","hover","sizeOffset","xaxis","labels","rotate","formatter","moment","unix","format","style","cssClass","yaxis","tooltip","grid","borderColor","onLoad","clearInterval","React","createElement","ReactApexCharts","ReactDOM","render","StrictMode","Main","document","getElementById"],"mappings":"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","file":"static/js/main.c5769371.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport ReactApexCharts from 'react-apexcharts'\r\nimport ApexCharts from 'apexcharts'\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\n\r\nvar _seed = 42;\r\nMath.random = function () {\r\n  _seed = _seed * 16807 % 2147483647;\r\n  return (_seed - 1) / 2147483646;\r\n};\r\n\r\nvar lastDate = 0;\r\nvar data = [];\r\nvar TICKINTERVAL = 86400000\r\nlet XAXISRANGE = 777600000\r\nfunction getDayWiseTimeSeries(baseval, count, yrange) {\r\n  var i = 0;\r\n  while (i < count) {\r\n    var x = baseval;\r\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n\r\n    data.push({\r\n      x, y\r\n    });\r\n    lastDate = baseval\r\n    baseval += TICKINTERVAL;\r\n    i++;\r\n  }\r\n}\r\n\r\ngetDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {\r\n  min: 10,\r\n  max: 90\r\n})\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n  const { kwargs } = props.args;\r\n  const { y_axis, api, y_max } = kwargs;\r\n  const [series, setSeries] = useState([]);\r\n  const [options, setOptions] = useState({});\r\n\r\n\r\n  useEffect(() => Streamlit.setFrameHeight())\r\n  const getGraphData = async () => {\r\n    // console.log(\"SSSSSSSSSSSSS\", kwargs);\r\n    const res = await axios.post(api, {\r\n      ...kwargs\r\n    });\r\n    return JSON.parse(res.data);\r\n    console.log(\"postres\", res.data);\r\n  }\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const dfData = await getGraphData();\r\n      const categories = dfData.map((row) => (row.timestamp_est / 1000));\r\n      // const categories = dfData.map((row) =>(row.timestamp_est.toString()));\r\n      const serie1 = dfData.map((row) => row.close);\r\n      const serie2 = dfData.map((row) => row.vwap);\r\n      const new_serires = y_axis.map((line) => {\r\n        return {\r\n          name: line.name,\r\n          data: dfData.map((row) => row[line['field']]).slice(0),\r\n        }\r\n      })\r\n      console.log('SSSSSSSSSSSS', serie1.slice(-1));\r\n      setSeries(new_serires)\r\n\r\n      ApexCharts.exec('realtime', 'updateSeries', new_serires)\r\n    }, 1000);\r\n\r\n    const onLoad = async () => {\r\n      const dfData = await getGraphData();\r\n      const categories = dfData.map((row) => (row.timestamp_est / 1000));\r\n      // const categories = dfData.map((row) =>(row.timestamp_est.toString()));\r\n      const serie1 = dfData.map((row) => row.close);\r\n      const serie2 = dfData.map((row) => row.vwap);\r\n      const new_serires = y_axis.map((line) => {\r\n        return {\r\n          name: line.name,\r\n          data: dfData.map((row) => row[line['field']]).slice(0),\r\n        }\r\n      })\r\n      const colors = y_axis.map((line) => line['color'])\r\n      const new_option = {\r\n        series: new_serires,\r\n        chart: {\r\n          id: 'realtime',\r\n          height: 350,\r\n          type: 'line',\r\n          zoom: {\r\n            enabled: true\r\n          },\r\n          animations: {\r\n            enabled: true,\r\n            easing: 'linear',\r\n            dynamicAnimation: {\r\n              speed: 1000\r\n            }\r\n          },\r\n\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          width: [3, 3, 3],\r\n          curve: 'smooth',\r\n          dashArray: [0, 0, 0]\r\n        },\r\n        title: {\r\n          text: '',\r\n          align: 'left'\r\n        },\r\n        legend: {\r\n          tooltipHoverFormatter: function (val, opts) {\r\n            return val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n          }\r\n        },\r\n        markers: {\r\n          size: 0,\r\n          hover: {\r\n            sizeOffset: 6\r\n          }\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: categories,\r\n          labels: {\r\n            rotate: 0,\r\n            formatter: function (val) {\r\n              return moment.unix(val).format(' hh:mm');\r\n            },\r\n            style: {\r\n              cssClass: 'xaxis-label',\r\n              // fontSize: '22px',\r\n            }\r\n          },\r\n        },\r\n        yaxis: {\r\n          max: y_max\r\n        },\r\n        tooltip: {\r\n          // y: [\r\n          //   {\r\n          //     title: {\r\n          //       formatter: function (val) {\r\n          //         return val + \" (mins)\"\r\n          //       }\r\n          //     }\r\n          //   },\r\n          //   {\r\n          //     title: {\r\n          //       formatter: function (val) {\r\n          //         return val + \" per session\"\r\n          //       }\r\n          //     }\r\n          //   },\r\n          //   {\r\n          //     title: {\r\n          //       formatter: function (val) {\r\n          //         return val;\r\n          //       }\r\n          //     }\r\n          //   }\r\n          // ]\r\n        },\r\n        grid: {\r\n          borderColor: '#f1f1f1',\r\n        }\r\n      };\r\n      console.log(\"onload\", new_option);\r\n      setOptions(new_option);\r\n      setSeries(new_serires)\r\n    }\r\n    // const interval = setInterval(() => {\r\n    // onLoad()\r\n    // }, 1000);\r\n    onLoad()\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"chart\">\r\n        <ReactApexCharts options={options} series={series} type=\"line\" height={350} />\r\n      </div>\r\n      <div id=\"html-dist\"></div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default withStreamlitConnection(Main);\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Main from \"./Main\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}