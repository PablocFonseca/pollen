{"version":3,"sources":["../node_modules/@vladmandic/face-api/dist sync","Dictaphone.jsx","VoiceGPT.jsx","Main.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","timer","Dictaphone","_ref","commands","myFunc","listenAfterRelpy","_useState","useState","_useState2","_slicedToArray","transcribing","_useState3","_useState4","clearTranscriptOnListen","_useSpeechRecognition","useSpeechRecognition","interimTranscript","transcript","finalTranscript","resetTranscript","listening","browserSupportsSpeechRecognition","isMicrophoneAvailable","_useState5","_useState6","prevScript","setPrevScript","useEffect","console","log","clearTimeout","setTimeout","api_body","keyword","React","createElement","style","display","flexDirection","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","reject","invoke","record","result","__await","then","unwrapped","error","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","g_anwers","firstFace","CustomVoiceGPT","props","api","_props$kwargs","kwargs","self_image","imageSrc","setImageSrc","message","setMessage","answers","setAnswers","_useState7","_useState8","setListenAfterReply","_React$useState","_React$useState2","modelsLoaded","setModelsLoaded","_React$useState3","_React$useState4","captureVideo","setCaptureVideo","videoRef","useRef","canvasRef","_asyncToGenerator","_callee","_context","process","all","faceapi","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","apply","arguments","loadModels","_ref4","_callee4","ret","command","text","body","_yield$axios$post","data","_context4","concat","_toConsumableArray","user","api_key","axios","post","Audio","play","t0","_x","_x2","useMemo","map","callback","matchInterim","Streamlit","setFrameHeight","Fragment","src","height","onClick","SpeechRecognition","startListening","continuous","language","answer","idx","resp","textAlign","padding","current","pause","srcObject","getTracks","cursor","backgroundColor","color","fontSize","border","borderRadius","navigator","mediaDevices","getUserMedia","video","width","stream","justifyContent","ref","onPlay","setInterval","_callee2","displaySize","detections","resizedDetections","_context2","innerHTML","withFaceLandmarks","withFaceExpressions","hello_audio","getContext","clearRect","drawDetections","drawFaceLandmarks","drawFaceExpressions","position","withStreamlitConnection","_props$args","args","VoiceGPT","engine","Styletron","ReactDOM","render","StrictMode","StyletronProvider","ThemeProvider","theme","LightTheme","Main","document","getElementById"],"mappings":"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","file":"static/js/main.97808a28.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 41;","import React, { useState, useEffect } from \"react\"\nimport { useSpeechRecognition } from \"react-speech-recognition\"\n\nlet timer\n\nconst Dictaphone = ({ commands, myFunc, listenAfterRelpy }) => {\n  const [transcribing, setTranscribing] = useState(true)\n  const [clearTranscriptOnListen, setClearTranscriptOnListen] = useState(true)\n  const toggleTranscribing = () => setTranscribing(!transcribing)\n  const toggleClearTranscriptOnListen = () =>\n    setClearTranscriptOnListen(!clearTranscriptOnListen)\n  const {\n    transcript,\n    interimTranscript,\n    finalTranscript,\n    resetTranscript,\n    listening,\n    browserSupportsSpeechRecognition,\n    isMicrophoneAvailable,\n  } = useSpeechRecognition({ transcribing, clearTranscriptOnListen, commands })\n  const [prevScript, setPrevScript] = useState(\"\")\n\n  useEffect(() => {\n    // console.log(\n    //   \"Got interim result:\",\n    //   interimTranscript.length,\n    //   interimTranscript\n    // )\n    // setPrevScript(interimTranscript)\n    // if (interimTranscript === \"\") {\n    //   console.log(\"prevScript :>> \", prevScript)\n    // }\n  }, [interimTranscript])\n\n  useEffect(() => {\n    if (finalTranscript != \"\" && listenAfterRelpy) {\n      console.log(\"Got final result:\", finalTranscript)\n      timer && clearTimeout(timer)\n      timer = setTimeout(() => {\n        setPrevScript(finalTranscript)\n        myFunc(finalTranscript, { api_body: { keyword: \"\" } })\n        resetTranscript()\n      }, 1000)\n    }\n    if (finalTranscript != \"\" && !listenAfterRelpy) {\n      setPrevScript(finalTranscript)\n      resetTranscript()\n    }\n  }, [finalTranscript, listenAfterRelpy])\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>No browser support</span>\n  }\n\n  if (!isMicrophoneAvailable) {\n    return <span>Please allow access to the microphone</span>\n  }\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <span>you said: {prevScript}</span>\n      <span>listening: {listening ? \"on\" : \"off\"}</span>\n      {/* <span>transcribing: {transcribing ? \"on\" : \"off\"}</span> */}\n      <span>\n        clearTranscriptOnListen: {clearTranscriptOnListen ? \"on\" : \"off\"}\n      </span>\n      {/* <button onClick={resetTranscript}>Reset</button>\n      <button onClick={toggleTranscribing}>Toggle transcribing</button> */}\n      {/* <button onClick={toggleClearTranscriptOnListen}>\n        Toggle clearTranscriptOnListen\n      </button> */}\n    </div>\n  )\n}\n\nexport default Dictaphone\n","import React, { useState, useEffect, FC, memo, useMemo } from \"react\"\nimport axios from \"axios\"\nimport {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\"\nimport Dictaphone from \"./Dictaphone\"\nimport * as faceapi from \"@vladmandic/face-api\"\n\nconst imageUrls = {\n  hoots: \"/hoots.png\",\n  hootsAndHootie: \"/hootsAndhootie.png\",\n}\n\nlet timer = null\nlet g_anwers = []\nlet firstFace = false\n\nconst CustomVoiceGPT = (props) => {\n  const { api, kwargs = {} } = props\n  const [imageSrc, setImageSrc] = useState(kwargs.self_image)\n  const [message, setMessage] = useState(\"\")\n  const [answers, setAnswers] = useState([])\n  const [listenAfterRelpy, setListenAfterReply] = useState(false)\n  const [modelsLoaded, setModelsLoaded] = React.useState(false)\n  const [captureVideo, setCaptureVideo] = React.useState(false)\n\n  const videoRef = React.useRef()\n  const videoHeight = 480\n  const videoWidth = 640\n  const canvasRef = React.useRef()\n\n  React.useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + \"/models\"\n\n      Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n        faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL),\n      ]).then(setModelsLoaded(true))\n    }\n    loadModels()\n  }, [])\n\n  const startVideo = () => {\n    setCaptureVideo(true)\n    navigator.mediaDevices\n      .getUserMedia({ video: { width: 300 } })\n      .then((stream) => {\n        let video = videoRef.current\n        video.srcObject = stream\n        video.play()\n      })\n      .catch((err) => {\n        console.error(\"error:\", err)\n      })\n  }\n\n  const handleVideoOnPlay = () => {\n    setInterval(async () => {\n      if (canvasRef && canvasRef.current) {\n        canvasRef.current.innerHTML = faceapi.createCanvasFromMedia(\n          videoRef.current\n        )\n        const displaySize = {\n          width: videoWidth,\n          height: videoHeight,\n        }\n\n        faceapi.matchDimensions(canvasRef.current, displaySize)\n\n        const detections = await faceapi\n          .detectAllFaces(\n            videoRef.current,\n            new faceapi.TinyFaceDetectorOptions()\n          )\n          .withFaceLandmarks()\n          .withFaceExpressions()\n\n        const resizedDetections = faceapi.resizeResults(detections, displaySize)\n        console.log(\"resizedDetections :>> \", resizedDetections)\n        if (resizedDetections.length > 0 && !firstFace) {\n          firstFace = true\n          if (kwargs.hello_audio) {\n            const audio = new Audio(kwargs.hello_audio)\n            audio.play()\n          }\n        }\n        canvasRef &&\n          canvasRef.current &&\n          canvasRef.current\n            .getContext(\"2d\")\n            .clearRect(0, 0, videoWidth, videoHeight)\n        canvasRef &&\n          canvasRef.current &&\n          faceapi.draw.drawDetections(canvasRef.current, resizedDetections)\n        canvasRef &&\n          canvasRef.current &&\n          faceapi.draw.drawFaceLandmarks(canvasRef.current, resizedDetections)\n        canvasRef &&\n          canvasRef.current &&\n          faceapi.draw.drawFaceExpressions(canvasRef.current, resizedDetections)\n      }\n    }, 300)\n  }\n\n  const closeWebcam = () => {\n    videoRef.current.pause()\n    videoRef.current.srcObject.getTracks()[0].stop()\n    setCaptureVideo(false)\n  }\n  const testFunc = async () => {\n    const audio = new Audio(\"./test_audio.mp3s\")\n    console.log(audio.play())\n    const response = await axios.post(\n      \"http://192.168.143.97:8000/api/data/voiceGPT\",\n      {\n        api_key: \"sdf\",\n        text: \"text\",\n        self_image: \"something\",\n      }\n    )\n    console.log(\"response :>> \", response)\n  }\n\n  const myFunc = async (ret, command) => {\n    console.log(\"ret :>> \", ret)\n    setMessage(` (${command[\"api_body\"][\"keyword\"]}) ${ret},`)\n    const text = [...g_anwers, { user: command[\"api_body\"][\"keyword\"] + ret }]\n    setAnswers([...text])\n    try {\n      console.log(\"api call on listen...\", command)\n      const body = {\n        api_key: \"api_key\",\n        text: text,\n        self_image: imageSrc,\n      }\n      const { data } = await axios.post(api, body)\n      console.log(\"data :>> \", data)\n      data[\"self_image\"] && setImageSrc(data[\"self_image\"])\n      data[\"listen_after_reply\"] &&\n        setListenAfterReply(data[\"listen_after_reply\"])\n      setAnswers(data[\"text\"])\n      g_anwers = [...data[\"text\"]]\n      if (data[\"audio_path\"]) {\n        const audio = new Audio(data[\"audio_path\"])\n        audio.play()\n      }\n    } catch (error) {\n      // console.log(\"api call on listen failded!\")\n    }\n  }\n  const commands = useMemo(() => {\n    return kwargs[\"commands\"].map((command) => ({\n      command: command[\"keywords\"],\n      callback: (ret) => {\n        timer && clearTimeout(timer)\n        timer = setTimeout(() => myFunc(ret, command), 1000)\n      },\n      matchInterim: true,\n    }))\n  }, [kwargs.commands])\n  // const commands = [\n  //   {\n  //     command: \"I would like to order *\",\n  //     callback: (food) => setMessage(`Your order is for: ${food}`),\n  //     matchInterim: true,\n  //   },\n  //   {\n  //     command: \"The weather is :condition today\",\n  //     callback: (condition) => setMessage(`Today, the weather is ${condition}`),\n  //   },\n  //   {\n  //     command: [\"Hey foots\", \"Hey foods\"],\n  //     callback: ({ command }) => setMessage(`Hi there! You said: \"${command}\"`),\n  //     matchInterim: true,\n  //   },\n  //   {\n  //     command: \"Beijing\",\n  //     callback: (command, spokenPhrase, similarityRatio) =>\n  //       setMessage(\n  //         `${command} and ${spokenPhrase} are ${similarityRatio * 100}% similar`\n  //       ),\n  //     // If the spokenPhrase is \"Benji\", the message would be \"Beijing and Benji are 40% similar\"\n  //     isFuzzyMatch: true,\n  //     fuzzyMatchingThreshold: 0.2,\n  //   },\n  //   {\n  //     command: [\"eat\", \"sleep\", \"leave\"],\n  //     callback: (command) => setMessage(`Best matching command: ${command}`),\n  //     isFuzzyMatch: true,\n  //     fuzzyMatchingThreshold: 0.2,\n  //     bestMatchOnly: true,\n  //   },\n  //   {\n  //     command: \"clear\",\n  //     callback: ({ resetTranscript }) => resetTranscript(),\n  //     matchInterim: true,\n  //   },\n  // ]\n\n  const listenContinuously = () =>\n    SpeechRecognition.startListening({\n      continuous: true,\n      language: \"en-GB\",\n    })\n  const listenContinuouslyInChinese = () =>\n    SpeechRecognition.startListening({\n      continuous: true,\n      language: \"zh-CN\",\n    })\n  const listenOnce = () =>\n    SpeechRecognition.startListening({ continuous: false })\n\n  useEffect(() => Streamlit.setFrameHeight())\n\n  useEffect(() => {}, [props])\n\n  return (\n    <>\n      <div>\n        <img src={imageSrc} height={100} />\n        <Dictaphone\n          commands={commands}\n          myFunc={myFunc}\n          listenAfterRelpy={listenAfterRelpy}\n        />\n        <button onClick={listenContinuously}>Listen continuously</button>\n        <div> You: {message}</div>\n        {answers.map((answer, idx) => (\n          <div key={idx}>\n            <div>-user: {answer.user}</div>\n            <div>-resp: {answer.resp ? answer.resp : \"thinking...\"}</div>\n          </div>\n        ))}\n      </div>\n      <div>\n        {/* <button onClick={listenOnce}>Listen Once</button> */}\n        {/* <button onClick={listenContinuouslyInChinese}></button> */}\n        {/* <button onClick={SpeechRecognition.stopListening}>Stop</button> */}\n        {/* <button onClick={testFunc}>test</button> */}\n      </div>\n      <div>\n        <div style={{ textAlign: \"center\", padding: \"10px\" }}>\n          {captureVideo && modelsLoaded ? (\n            <button\n              onClick={closeWebcam}\n              style={{\n                cursor: \"pointer\",\n                backgroundColor: \"green\",\n                color: \"white\",\n                padding: \"15px\",\n                fontSize: \"25px\",\n                border: \"none\",\n                borderRadius: \"10px\",\n              }}\n            >\n              Close Webcam\n            </button>\n          ) : (\n            <button\n              onClick={startVideo}\n              style={{\n                cursor: \"pointer\",\n                backgroundColor: \"green\",\n                color: \"white\",\n                padding: \"15px\",\n                fontSize: \"25px\",\n                border: \"none\",\n                borderRadius: \"10px\",\n              }}\n            >\n              Open Webcam\n            </button>\n          )}\n        </div>\n        {captureVideo ? (\n          modelsLoaded ? (\n            <div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  padding: \"10px\",\n                }}\n              >\n                <video\n                  ref={videoRef}\n                  height={videoHeight}\n                  width={videoWidth}\n                  onPlay={handleVideoOnPlay}\n                  style={{ borderRadius: \"10px\" }}\n                />\n                <canvas ref={canvasRef} style={{ position: \"absolute\" }} />\n              </div>\n            </div>\n          ) : (\n            <div>loading...</div>\n          )\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CustomVoiceGPT\n","import React, { useEffect, useState } from \"react\"\nimport {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport VoiceGPT from \"./VoiceGPT.jsx\"\n\nconst Main = (props: ComponentProps) => {\n  const { api, kwargs } = props.args\n  useEffect(() => Streamlit.setFrameHeight())\n  return (\n    <>\n      <VoiceGPT api={api} kwargs={kwargs} />\n    </>\n  )\n}\n\nexport default withStreamlitConnection(Main)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Main from \"./Main\"\n// Lots of import to define a Styletron engine and load the light theme of baseui\nimport { Client as Styletron } from \"styletron-engine-atomic\"\nimport { Provider as StyletronProvider } from \"styletron-react\"\nimport { ThemeProvider, LightTheme } from \"baseui\"\n\nconst engine = new Styletron()\n\n// Wrap your CustomSlider with the baseui them\nReactDOM.render(\n  <React.StrictMode>\n    <StyletronProvider value={engine}>\n      <ThemeProvider theme={LightTheme}>\n        <Main />\n      </ThemeProvider>\n    </StyletronProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}