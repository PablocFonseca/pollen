{"version":3,"sources":["utils/order_rules.ts","components/Modal.jsx","Aggrid.tsx","Main.tsx","index.tsx"],"names":["order_rules_default","KOR_version","theme","status","trade_using_limits","limitprice_decay_timeduration","doubledown_timeduration","max_profit_waveDeviation","max_profit_waveDeviation_timeduration","timeduration","take_profit","sellout","sell_out","sell_trigbee_trigger","stagger_profits","scalp_profits","scalp_profits_timeduration","stagger_profits_tiers","skip_sell_trigbee_distance_frequency","skip_buy_trigbee_distance_frequency","ignore_trigbee_at_power","ignore_trigbee_in_macdstory_tier","ignore_trigbee_in_histstory_tier","ignore_trigbee_in_vwap_range","low_range","high_range","take_profit_in_vwap_deviation_range","short_position","use_wave_guage","doubledowns_allowed","close_order_today","close_order_today_vars","last_60sec","close_order_today_allowed_timeduration","last_30min","last_hr","use_margin","revisit_trade_frequency","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ReactModal","setAppElement","MyModal","_ref","isOpen","closeModal","modalData","promptText","setPromptText","toastr","prompt_field","prompt_order_rules","ref","selectedRow","useRef","handleOk","_ref2","_asyncToGenerator","_callee","_context","axios","post","button_api","_objectSpread","username","prod","selected_row","default_value","kwargs","success","t0","alert","concat","apply","arguments","handleOkSecond","_ref3","_callee2","_context2","console","log","useEffect","setTimeout","current","focus","React","createElement","className","style","display","prompt_message","onClick","map","rule","index","width","checked","onChange","e","_defineProperty","target","rows","cols","placeholder","g_rowdata","g_newRowData","dateFormatter","isoString","formaterString","date","Date","format","_unused","currencyFormatter","number","currencySymbol","n","Number","parseFloat","toFixed","numberFormatter","precision","HyperlinkRenderer","props","href","column","colDef","baseURL","data","options","positionClass","hideDuration","timeOut","AgGrid","BtnCellRenderer","clicked","buttonName","gridRef","api","api_update","_props$refresh_sec","refresh_sec","_props$refresh_cutoff","refresh_cutoff_sec","_props$prod","_props$grid_options","grid_options","buttons","_useState","useState","_useState2","_slicedToArray","rowData","setRowData","_useState3","_useState4","modalShow","setModalshow","_useState5","_useState6","setModalData","_useState7","_useState8","Streamlit","setFrameHeight","button","columnDefs","field","headerName","pinned","cellRenderer","cellRendererParams","_clicked","rules_value","find","row","window","confirm","_x","fetchAndSetData","array","id_array","old_id_array","toUpdate","toRemove","toAdd","fetchData","item","filter","includes","applyTransactionAsync","update","remove","add","_callee3","res","_context3","JSON","parse","message","timeout","interval","setInterval","clearInterval","clearTimeout","useCallback","skipHeader","allColumnIds","columnApi","getColumns","getId","autoSizeColumns","sizeColumnsToFit","defaultMinWidth","onGridReady","_callee5","params","_context5","_callee4","_context4","_x2","autoGroupColumnDef","useMemo","minWidth","getRowId","onCellValueChanged","toolPanels","id","labelDefault","labelKey","iconKey","toolPanel","defaultToolPanel","event","onRefresh","_ref5","_callee6","_context6","onUpdate","_ref6","_callee7","_context7","warning","new_data","columnTypes","dateColumnFilter","filterParams","comparator","filterValue","cellValue","compareAsc","numberColumnFilter","shortDateTimeFormat","valueFormatter","customDateTimeFormat","custom_format_string","customNumericFormat","_params$column$colDef2","customCurrencyFormat","custom_currency_symbol","timedeltaFormat","duration","humanize","customNumberFormat","toLocaleString","minimumFractionDigits","customHyperlinkRenderer","Fragment","flexDirection","height","margin","AgGridReact","getRowStyle","background","color","rowStyle","fontSize","padding","headerHeight","rowHeight","animateRows","suppressAggFuncInHeader","gridOptions","withStreamlitConnection","_props$args","args","gridoption_build","_props$args2","_props$args2$kwargs","Aggrid","ReactDOM","render","StrictMode","Main","document","getElementById"],"mappings":"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","file":"static/js/main.c75c008e.chunk.js","sourcesContent":["export const order_rules_default = {\r\n  KOR_version: 2,\r\n  theme: \"nuetral\",\r\n  status: \"active\",\r\n  trade_using_limits: false,\r\n  limitprice_decay_timeduration: 1,\r\n  doubledown_timeduration: 60,\r\n  max_profit_waveDeviation: 3,\r\n  max_profit_waveDeviation_timeduration: 1440,\r\n  timeduration: 525600,\r\n  take_profit: 0.1,\r\n  sellout: -0.05,\r\n  sell_out: -0.0089,\r\n  sell_trigbee_trigger: true,\r\n  stagger_profits: false,\r\n  scalp_profits: false,\r\n  scalp_profits_timeduration: 30,\r\n  stagger_profits_tiers: 1,\r\n  skip_sell_trigbee_distance_frequency: 0,\r\n  skip_buy_trigbee_distance_frequency: 0,\r\n  ignore_trigbee_at_power: 0.01,\r\n  ignore_trigbee_in_macdstory_tier: [],\r\n  ignore_trigbee_in_histstory_tier: [],\r\n  ignore_trigbee_in_vwap_range: { low_range: -0.05, high_range: 0.05 },\r\n  take_profit_in_vwap_deviation_range: { low_range: -0.05, high_range: 0.05 },\r\n  short_position: false,\r\n  use_wave_guage: false,\r\n  doubledowns_allowed: 2,\r\n  close_order_today: false,\r\n  close_order_today_vars: {\r\n    last_60sec: {\r\n      take_profit: false,\r\n      close_order_today_allowed_timeduration: 60,\r\n    },\r\n    last_30min: {\r\n      take_profit: true,\r\n      close_order_today_allowed_timeduration: 60,\r\n    },\r\n    last_hr: { take_profit: true, close_order_today_allowed_timeduration: 60 },\r\n  },\r\n  use_margin: false,\r\n  revisit_trade_frequency: 216000,\r\n  close_order_today_allowed_timeduration: 60,\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport ReactModal from 'react-modal'\r\nimport './modal.css'\r\nimport axios from 'axios'\r\nimport { order_rules_default } from '../utils/order_rules'\r\n\r\nconst modalStyle = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: 'yellow',\r\n  },\r\n}\r\nReactModal.setAppElement('#root')\r\n\r\nconst MyModal = ({\r\n  isOpen,\r\n  closeModal,\r\n  modalData,\r\n  promptText,\r\n  setPromptText,\r\n  toastr,\r\n}) => {\r\n  const { prompt_field, prompt_order_rules, selectedRow } = modalData\r\n\r\n  const ref = useRef()\r\n\r\n  const handleOk = async () => {\r\n    try {\r\n      const res = await axios.post(modalData.button_api, {\r\n        username: modalData.username,\r\n        prod: modalData.prod,\r\n        selected_row: modalData.selectedRow,\r\n        default_value: promptText,\r\n        ...modalData.kwargs,\r\n      })\r\n      toastr.success('Success')\r\n      closeModal()\r\n    } catch (error) {\r\n      alert(`${error}`)\r\n    }\r\n  }\r\n\r\n  const handleOkSecond = async () => {\r\n    try {\r\n      console.log('promptText :>> ', promptText)\r\n      const res = await axios.post(modalData.button_api, {\r\n        username: modalData.username,\r\n        prod: modalData.prod,\r\n        selected_row: modalData.selectedRow,\r\n        default_value: promptText,\r\n        ...modalData.kwargs,\r\n      })\r\n      toastr.success('Success')\r\n      closeModal()\r\n    } catch (error) {\r\n      alert(`${error}`)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOpen) setTimeout(() => ref.current.focus(), 100)\r\n  }, [isOpen])\r\n\r\n  if (prompt_field === 'order_rules')\r\n    return (\r\n      <div className='my-modal' style={{ display: isOpen ? 'block' : 'none' }}>\r\n        <div className='my-modal-content'>\r\n          <div className='modal-header px-4'>\r\n            <h4>{modalData.prompt_message}</h4>\r\n            <span className='close' onClick={closeModal}>\r\n              &times;\r\n            </span>\r\n          </div>\r\n          <div className='modal-body p-2'>\r\n            {prompt_order_rules.map((rule, index) => {\r\n              if (typeof promptText[rule] == 'boolean')\r\n                return (\r\n                  <div\r\n                    className='d-flex flex-row justify-content-end'\r\n                    key={index}\r\n                  >\r\n                    <label className='d-flex flex-row'>\r\n                      {rule + ':  '}\r\n                      <div className='px-2' style={{ width: '193px' }}>\r\n                        <input\r\n                          type='checkbox'\r\n                          checked={promptText[rule]}\r\n                          onChange={e =>\r\n                            setPromptText({\r\n                              ...promptText,\r\n                              [rule]: e.target.checked,\r\n                            })\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </label>\r\n                  </div>\r\n                )\r\n              return (\r\n                <div\r\n                  className='d-flex flex-row justify-content-end'\r\n                  key={index}\r\n                >\r\n                  <label>\r\n                    {rule + ':  '}\r\n                    <input\r\n                      type='text'\r\n                      value={promptText[rule]}\r\n                      onChange={e =>\r\n                        setPromptText({ ...promptText, [rule]: e.target.value })\r\n                      }\r\n                    />\r\n                  </label>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n          <div className='modal-footer'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-primary'\r\n              onClick={handleOkSecond}\r\n              ref={ref}\r\n            >\r\n              Ok\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className='btn btn-secondary'\r\n              onClick={closeModal}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  return (\r\n    <div className='my-modal' style={{ display: isOpen ? 'block' : 'none' }}>\r\n      <div className='my-modal-content'>\r\n        <div className='modal-header px-4'>\r\n          <h4>{modalData.prompt_message}</h4>\r\n          <span className='close' onClick={closeModal}>\r\n            &times;\r\n          </span>\r\n        </div>\r\n        <div className='modal-body p-2'>\r\n          <textarea\r\n            className='form-control'\r\n            rows={4}\r\n            cols={50}\r\n            type='text'\r\n            value={promptText}\r\n            placeholder='Please input text'\r\n            onChange={e => setPromptText(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='modal-footer'>\r\n          <button\r\n            type='button'\r\n            className='btn btn-primary'\r\n            onClick={handleOk}\r\n            ref={ref}\r\n          >\r\n            Ok\r\n          </button>\r\n          <button\r\n            type='button'\r\n            className='btn btn-secondary'\r\n            onClick={closeModal}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyModal\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useCallback,\r\n  StrictMode,\r\n} from 'react'\r\nimport { AgGridReact } from 'ag-grid-react'\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.min.css'\r\nimport 'ag-grid-community/styles/ag-grid.css'\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css'\r\nimport 'ag-grid-community/styles/ag-theme-balham.css'\r\nimport 'ag-grid-community/styles/ag-theme-material.css'\r\nimport Modal from 'react-modal'\r\nimport 'ag-grid-enterprise'\r\nimport { parseISO, compareAsc } from 'date-fns'\r\nimport { format } from 'date-fns-tz'\r\nimport { duration } from 'moment'\r\nimport './styles.css'\r\nimport axios from 'axios'\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from 'streamlit-component-lib'\r\nimport {\r\n  ColDef,\r\n  ColGroupDef,\r\n  ColumnResizedEvent,\r\n  GetRowIdFunc,\r\n  GetRowIdParams,\r\n  Grid,\r\n  GridOptions,\r\n  GridReadyEvent,\r\n  SideBarDef,\r\n  ValueParserParams,\r\n} from 'ag-grid-community'\r\nimport MyModal from './components/Modal'\r\nimport { order_rules_default } from './utils/order_rules'\r\n\r\ntype Props = {\r\n  username: string\r\n  api: string\r\n  api_update: string\r\n  refresh_sec?: number\r\n  refresh_cutoff_sec?: number\r\n  gridoption_build?: any\r\n  prod?: boolean\r\n  grid_options?: any\r\n  index: string\r\n  kwargs: any\r\n}\r\n\r\nlet g_rowdata: any[] = []\r\nlet g_newRowData: any = null\r\n\r\nfunction dateFormatter (isoString: string, formaterString: string): String {\r\n  try {\r\n    let date = new Date(isoString)\r\n    return format(date, formaterString)\r\n  } catch {\r\n    return isoString\r\n  } finally {\r\n  }\r\n}\r\n\r\nfunction currencyFormatter (number: any, currencySymbol: string): String {\r\n  let n = Number.parseFloat(number)\r\n  if (!Number.isNaN(n)) {\r\n    return currencySymbol + n.toFixed(2)\r\n  } else {\r\n    return number\r\n  }\r\n}\r\n\r\nfunction numberFormatter (number: any, precision: number): String {\r\n  let n = Number.parseFloat(number)\r\n  if (!Number.isNaN(n)) {\r\n    return n.toFixed(precision)\r\n  } else {\r\n    return number\r\n  }\r\n}\r\n\r\nconst columnFormaters = {\r\n  columnTypes: {\r\n    dateColumnFilter: {\r\n      filter: 'agDateColumnFilter',\r\n      filterParams: {\r\n        comparator: (filterValue: any, cellValue: string) =>\r\n          compareAsc(parseISO(cellValue), filterValue),\r\n      },\r\n    },\r\n    numberColumnFilter: {\r\n      filter: 'agNumberColumnFilter',\r\n    },\r\n    shortDateTimeFormat: {\r\n      valueFormatter: (params: any) =>\r\n        dateFormatter(params.value, 'dd/MM/yyyy HH:mm'),\r\n    },\r\n    customDateTimeFormat: {\r\n      valueFormatter: (params: any) =>\r\n        dateFormatter(params.value, params.column.colDef.custom_format_string),\r\n    },\r\n    customNumericFormat: {\r\n      valueFormatter: (params: any) =>\r\n        numberFormatter(params.value, params.column.colDef.precision ?? 2),\r\n    },\r\n    customCurrencyFormat: {\r\n      valueFormatter: (params: any) =>\r\n        currencyFormatter(\r\n          params.value,\r\n          params.column.colDef.custom_currency_symbol\r\n        ),\r\n    },\r\n    timedeltaFormat: {\r\n      valueFormatter: (params: any) => duration(params.value).humanize(true),\r\n    },\r\n  },\r\n}\r\n\r\nconst HyperlinkRenderer = (props: any) => {\r\n  console.log('hyperlink', props)\r\n  return (\r\n    <a\r\n      href={`${props.column.colDef.baseURL}/${\r\n        props.data[props.column.colDef['linkField']]\r\n      }`}\r\n      target='_blank'\r\n    >\r\n      {props.value}\r\n    </a>\r\n  )\r\n}\r\n\r\ntoastr.options = {\r\n  positionClass: 'toast-top-full-width',\r\n  hideDuration: 300,\r\n  timeOut: 3000,\r\n}\r\n\r\nconst AgGrid = (props: Props) => {\r\n  const BtnCellRenderer = (props: any) => {\r\n    const btnClickedHandler = () => {\r\n      props.clicked(props.value)\r\n    }\r\n\r\n    return <button onClick={btnClickedHandler}>{props.buttonName}</button>\r\n  }\r\n\r\n  const gridRef = useRef<AgGridReact>(null)\r\n  const {\r\n    username,\r\n    api,\r\n    api_update,\r\n    refresh_sec = undefined,\r\n    refresh_cutoff_sec = 0,\r\n    prod = true,\r\n    index,\r\n    kwargs,\r\n  } = props\r\n  let { grid_options = {} } = props\r\n  const { buttons } = kwargs\r\n  const [rowData, setRowData] = useState<any[]>([])\r\n  const [modalShow, setModalshow] = useState(false)\r\n  const [modalData, setModalData] = useState({})\r\n  const [promptText, setPromptText] = useState('')\r\n\r\n  useEffect(() => {\r\n    Streamlit.setFrameHeight()\r\n    console.log('buttons :>> ', buttons)\r\n    if (buttons.length) {\r\n      buttons.map((button: any) => {\r\n        const { prompt_field, prompt_message, button_api, prompt_order_rules } =\r\n          button\r\n        grid_options.columnDefs!.push({\r\n          field: index,\r\n          headerName: button['col_headername'],\r\n          width: button['col_width'],\r\n          pinned: button['pinned'],\r\n          cellRenderer: BtnCellRenderer,\r\n          cellRendererParams: {\r\n            buttonName: button['button_name'],\r\n            clicked: async function (field: any) {\r\n              try {\r\n                const selectedRow = g_rowdata.find(row => row[index] == field)\r\n                if (prompt_field === 'order_rules') {\r\n                  setModalshow(true)\r\n                  setModalData({\r\n                    prompt_message,\r\n                    button_api: button_api,\r\n                    username: username,\r\n                    prod: prod,\r\n                    selectedRow: selectedRow,\r\n                    kwargs: kwargs,\r\n                    prompt_field,\r\n                    prompt_order_rules,\r\n                  })\r\n                  const rules_value: any = {}\r\n                  prompt_order_rules.map((rule: string) => {\r\n                    rules_value[rule] =\r\n                    // @ts-expect-error\r\n                      order_rules_default[rule] != null\r\n                        ? // @ts-expect-error\r\n                          order_rules_default[rule]\r\n                        : selectedRow[rule]\r\n                  })\r\n                  setPromptText(rules_value)\r\n                } else if (prompt_field && prompt_message) {\r\n                  setModalshow(true)\r\n                  setModalData({\r\n                    prompt_message,\r\n                    button_api: button_api,\r\n                    username: username,\r\n                    prod: prod,\r\n                    selectedRow: selectedRow,\r\n                    kwargs: kwargs,\r\n                  })\r\n                  setPromptText(selectedRow[prompt_field])\r\n                  // const num = prompt(prompt_message, selectedRow[prompt_field]);\r\n                  // if (num == null) return;\r\n                  // const res = await axios.post(button_api, {\r\n                  //   username: username,\r\n                  //   prod: prod,\r\n                  //   selected_row: selectedRow,\r\n                  //   default_value: num,\r\n                  //   ...kwargs,\r\n                  // })\r\n                } else {\r\n                  if (window.confirm(prompt_message)) {\r\n                    const res = await axios.post(button_api, {\r\n                      username: username,\r\n                      prod: prod,\r\n                      selected_row: selectedRow,\r\n                      ...kwargs,\r\n                    })\r\n                  }\r\n                  toastr.success('Success!')\r\n                }\r\n              } catch (error) {\r\n                alert(`${error}`)\r\n              }\r\n            },\r\n          },\r\n        })\r\n      })\r\n    }\r\n    // parseGridoptions()\r\n  })\r\n\r\n  const fetchAndSetData = async () => {\r\n    const array = await fetchData()\r\n    if (array === false) return false\r\n    const api = gridRef.current!.api\r\n    const id_array = array.map((item: any) => item[index])\r\n    const old_id_array = g_rowdata.map((item: any) => item[index])\r\n    const toUpdate = array.filter((row: any) => id_array.includes(row[index]))\r\n    const toRemove = g_rowdata.filter(row => !id_array.includes(row[index]))\r\n    const toAdd = array.filter((row: any) => !old_id_array.includes(row[index]))\r\n    api.applyTransactionAsync({\r\n      update: toUpdate,\r\n      remove: toRemove,\r\n      add: toAdd,\r\n    })\r\n    g_rowdata = array\r\n    return true\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const res = await axios.post(api, {\r\n        username: username,\r\n        prod: prod,\r\n        ...kwargs,\r\n      })\r\n      const array = JSON.parse(res.data)\r\n      console.log('table data :>> ', array)\r\n      if (array.status == false) {\r\n        toastr.error(`Fetch Error: ${array.message}`)\r\n        return false\r\n      }\r\n      return array\r\n    } catch (error: any) {\r\n      toastr.error(`Fetch Error: ${error.message}`)\r\n      return false\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (refresh_sec && refresh_sec > 0) {\r\n      const interval = setInterval(fetchAndSetData, refresh_sec * 1000)\r\n      let timeout: NodeJS.Timeout\r\n      if (refresh_cutoff_sec > 0) {\r\n        console.log(refresh_cutoff_sec)\r\n        timeout = setTimeout(() => {\r\n          clearInterval(interval)\r\n          console.log('Fetching data ended, refresh rate:', refresh_sec)\r\n        }, refresh_cutoff_sec * 1000)\r\n      }\r\n      console.error('rendered==========', props)\r\n      return () => {\r\n        clearInterval(interval)\r\n        if (timeout) clearTimeout(timeout)\r\n      }\r\n    }\r\n  }, [props])\r\n\r\n  const autoSizeAll = useCallback((skipHeader: boolean) => {\r\n    const allColumnIds: string[] = []\r\n    gridRef.current!.columnApi.getColumns()!.forEach((column: any) => {\r\n      allColumnIds.push(column.getId())\r\n    })\r\n    gridRef.current!.columnApi.autoSizeColumns(allColumnIds, skipHeader)\r\n  }, [])\r\n\r\n  const sizeToFit = useCallback(() => {\r\n    gridRef.current!.api.sizeColumnsToFit({\r\n      defaultMinWidth: 100,\r\n    })\r\n  }, [])\r\n\r\n  const onGridReady = useCallback(async (params: GridReadyEvent) => {\r\n    setTimeout(async () => {\r\n      try {\r\n        const array = await fetchData()\r\n        console.log('AAAAAAAAAAAAAAAAAAAAAAA', array)\r\n        if (array == false) {\r\n          // toastr.error(`Error: ${array.message}`)\r\n          return\r\n        }\r\n        setRowData(array)\r\n        g_rowdata = array\r\n      } catch (error: any) {\r\n        toastr.error(`Error: ${error.message}`)\r\n      }\r\n    }, 100)\r\n  }, [])\r\n\r\n  const autoGroupColumnDef = useMemo<ColDef>(() => {\r\n    return {\r\n      minWidth: 200,\r\n    }\r\n  }, [])\r\n\r\n  const getRowId = useMemo<GetRowIdFunc>(() => {\r\n    return (params: GetRowIdParams) => {\r\n      return params.data[index]\r\n    }\r\n  }, [index])\r\n\r\n  const sideBar = useMemo<\r\n    SideBarDef | string | string[] | boolean | null\r\n  >(() => {\r\n    return {\r\n      toolPanels: [\r\n        {\r\n          id: 'columns',\r\n          labelDefault: 'Columns',\r\n          labelKey: 'columns',\r\n          iconKey: 'columns',\r\n          toolPanel: 'agColumnsToolPanel',\r\n        },\r\n        {\r\n          id: 'filters',\r\n          labelDefault: 'Filters',\r\n          labelKey: 'filters',\r\n          iconKey: 'filter',\r\n          toolPanel: 'agFiltersToolPanel',\r\n        },\r\n      ],\r\n      defaultToolPanel: 'customStats',\r\n    }\r\n  }, [])\r\n\r\n  const onCellValueChanged = useCallback(event => {\r\n    if (g_newRowData == null) g_newRowData = {}\r\n    g_newRowData[event.data[index]] = event.data\r\n    console.log('Data after change is', g_newRowData)\r\n  }, [])\r\n\r\n  const onRefresh = async () => {\r\n    try {\r\n      const success = await fetchAndSetData()\r\n      success && toastr.success('Refresh success!')\r\n    } catch (error: any) {\r\n      toastr.error(`Refresh Failed! ${error.message}`)\r\n    }\r\n  }\r\n\r\n  const onUpdate = async () => {\r\n    if (g_newRowData == null) {\r\n      toastr.warning(`No changes to update`)\r\n      return\r\n    }\r\n    try {\r\n      const res: any = await axios.post(api_update, {\r\n        username: username,\r\n        prod: prod,\r\n        new_data: g_newRowData,\r\n        ...kwargs,\r\n      })\r\n      g_newRowData = null\r\n      if (res.status) toastr.success(`Successfully Updated! `)\r\n      else toastr.error(`Failed! ${res.message}`)\r\n    } catch (error) {\r\n      toastr.error(`Failed! ${error}`)\r\n    }\r\n  }\r\n\r\n  const columnTypes = useMemo<any>(() => {\r\n    return {\r\n      dateColumnFilter: {\r\n        filter: 'agDateColumnFilter',\r\n        filterParams: {\r\n          comparator: (filterValue: any, cellValue: string) =>\r\n            compareAsc(new Date(cellValue), filterValue),\r\n        },\r\n      },\r\n      numberColumnFilter: {\r\n        filter: 'agNumberColumnFilter',\r\n      },\r\n      shortDateTimeFormat: {\r\n        valueFormatter: (params: any) =>\r\n          dateFormatter(params.value, 'dd/MM/yyyy HH:mm'),\r\n      },\r\n      customDateTimeFormat: {\r\n        valueFormatter: (params: any) =>\r\n          dateFormatter(\r\n            params.value,\r\n            params.column.colDef.custom_format_string\r\n          ),\r\n      },\r\n      customNumericFormat: {\r\n        valueFormatter: (params: any) =>\r\n          numberFormatter(params.value, params.column.colDef.precision ?? 2),\r\n      },\r\n      customCurrencyFormat: {\r\n        valueFormatter: (params: any) =>\r\n          currencyFormatter(\r\n            params.value,\r\n            params.column.colDef.custom_currency_symbol\r\n          ),\r\n      },\r\n      timedeltaFormat: {\r\n        valueFormatter: (params: any) => duration(params.value).humanize(true),\r\n      },\r\n      customNumberFormat: {\r\n        valueFormatter: (params: any) =>\r\n          Number(params.value).toLocaleString('en-US', {\r\n            minimumFractionDigits: 0,\r\n          }),\r\n      },\r\n      customHyperlinkRenderer: {\r\n        // valueGetter: (params: any) =>\r\n        //   params.column.colDef.baseURL + params.data.honey,\r\n        cellRenderer: HyperlinkRenderer,\r\n        cellRendererParams: {\r\n          baseURL: 'URLSearchParams.co',\r\n        },\r\n      },\r\n    }\r\n  }, [])\r\n\r\n  const onClick = () => {\r\n    toastr.clear()\r\n    setTimeout(() => toastr.success(`Settings updated `), 300)\r\n  }\r\n\r\n  const getRowStyle = (params: any) => {\r\n    console.log('AAAAAAAAAA :>> ', params)\r\n    return {\r\n      background: params.data['color_row'],\r\n      color: params.data['color_row_text'],\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MyModal\r\n        isOpen={modalShow}\r\n        closeModal={() => setModalshow(false)}\r\n        modalData={modalData}\r\n        promptText={promptText}\r\n        setPromptText={setPromptText}\r\n        toastr={toastr}\r\n      ></MyModal>\r\n      <div\r\n        style={{ flexDirection: 'row', height: '100%', width: '100' }}\r\n        id='myGrid'\r\n      >\r\n        {(refresh_sec == undefined || refresh_sec == 0) && (\r\n          <div style={{ display: 'flex' }}>\r\n            <div style={{ margin: '10px 10px 10px 2px' }}>\r\n              <button className='btn btn-warning' onClick={onRefresh}>\r\n                Refresh\r\n              </button>\r\n            </div>\r\n            <div style={{ margin: '10px 10px 10px 2px' }}>\r\n              <button className='btn btn-success' onClick={onUpdate}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div\r\n          className={grid_options.theme || 'ag-theme-alpine-dark'}\r\n          style={{\r\n            width: '100%',\r\n            height: kwargs['grid_height'] ? kwargs['grid_height'] : '100%',\r\n          }}\r\n        >\r\n          <AgGridReact\r\n            ref={gridRef}\r\n            rowData={rowData}\r\n            // defaultColDef={defaultColDef}\r\n            getRowStyle={getRowStyle}\r\n            rowStyle={{ fontSize: 12, padding: 0 }}\r\n            headerHeight={30}\r\n            rowHeight={30}\r\n            onGridReady={onGridReady}\r\n            autoGroupColumnDef={autoGroupColumnDef}\r\n            // sideBar={sideBar}\r\n            animateRows={true}\r\n            suppressAggFuncInHeader={true}\r\n            getRowId={getRowId}\r\n            gridOptions={grid_options}\r\n            onCellValueChanged={onCellValueChanged}\r\n            columnTypes={columnTypes}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AgGrid\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\n// import 'ag-grid-community/styles/ag-theme-alpine.css';\r\nimport 'ag-grid-community/styles/ag-theme-balham.css';\r\nimport Aggrid from \"./Aggrid\";\r\n\r\nconst Main = (props: ComponentProps) => {\r\n\r\n  const { username, api, api_update, refresh_sec, refresh_cutoff_sec, gridoption_build, prod } = props.args;\r\n  const { grid_options, kwargs = {} } = props.args;\r\n  const { index,theme } = grid_options;\r\n  console.log(\"AAAAAAAA\", grid_options);\r\n  return (\r\n    <div >\r\n      <Aggrid\r\n        username={username}\r\n        api={api}\r\n        api_update={api_update}\r\n        refresh_sec={refresh_sec}\r\n        refresh_cutoff_sec={refresh_cutoff_sec}\r\n        gridoption_build={gridoption_build}\r\n        prod={prod}\r\n        grid_options={grid_options}\r\n        index={index}\r\n        kwargs={kwargs}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStreamlitConnection(Main);\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Main from \"./Main\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}